class Solution {
public:
    vector<int> vowelStrings(vector<string>& words, vector<vector<int>>& queries) {
        int n = words.size();
        int m = queries.size();

        vector<int> vowelQueries(n);
        int presum=0;
        for(int i=0;i<n;i++){
            int vowelsum = isVowel(words[i]);
            presum+=vowelsum;
            vowelQueries[i]=presum;
        }

        vector<int> ans(m);
        for(int i=0;i<m;i++){
            vector<int> query = queries[i];
            ans[i] = query[0] == 0 ? vowelQueries[query[1]] : vowelQueries[query[1]] - vowelQueries[query[0]-1];
        }
        return ans;
    }
    static bool isVowel(string s){
        string vowels="aeiou";
        return vowels.find(s[0]) != string::npos && 
               vowels.find(s[s.size()-1]) != string::npos;
    }
};
